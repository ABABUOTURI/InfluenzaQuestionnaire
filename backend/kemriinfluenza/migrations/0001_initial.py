# Generated by Django 5.0.12 on 2025-03-17 06:32

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_no', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Staff number must start with KM, CM, or AD.', regex='^(KM|CM|AD).*$')])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message="Email must start with a letter and end with '@kemri.go.ke'.", regex='^[A-Za-z].*@kemri\\.go\\.ke$')])),
                ('password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SubmittedForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('serial_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('relationship', models.CharField(choices=[('Father and Mother', 'Father and Mother'), ('Mother only', 'Mother only'), ('Father only', 'Father only'), ('Relative', 'Relative')], max_length=20)),
                ('guardian_occupation', models.CharField(choices=[('Farm Worker', 'Farm Worker'), ('Self Employed', 'Self Employed'), ('Employed by someone', 'Employed by someone'), ('Professional', 'Professional'), ('Other', 'Other')], max_length=20)),
                ('guardian_education', models.CharField(choices=[('None', 'None'), ('Primary', 'Primary'), ('Secondary', 'Secondary'), ('Tertiary Education', 'Tertiary Education')], max_length=20)),
                ('respondent_religion', models.CharField(choices=[('Catholic', 'Catholic'), ('Protestant', 'Protestant'), ('Muslim', 'Muslim'), ('SDA', 'SDA'), ('None', 'None')], max_length=15)),
                ('family_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('has_siblings', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3)),
                ('siblings_have_partners', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3, null=True)),
                ('gets_pocket_money', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3)),
                ('pocket_money_adequate', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3, null=True)),
                ('financial_support', models.CharField(choices=[('Relative', 'Relative'), ('Boyfriend', 'Boyfriend'), ('Grandparents', 'Grandparents'), ('Other friends', 'Other friends')], max_length=20)),
                ('guardian_visits', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3)),
                ('alternative_visitor', models.CharField(blank=True, choices=[('Boyfriend', 'Boyfriend'), ('Relatives', 'Relatives'), ('Brothers/Sisters', 'Brothers/Sisters'), ('Man friend', 'Man friend'), ('None', 'None')], max_length=20, null=True)),
                ('access_to_reproductive_health_info', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3)),
                ('information_adequate', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3, null=True)),
                ('educator_name', models.JSONField(blank=True, default=list, null=True)),
                ('topic_name', models.JSONField(blank=True, default=list, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='kemriinfluenza.user')),
            ],
        ),
    ]
